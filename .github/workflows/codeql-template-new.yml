name: CodeQL Security Scan (Reusable)

on:
  workflow_call:
    inputs:
      language:
        description: "Programming language to scan (csharp, java, javascript, python, go, cpp, ruby)"
        required: true
        type: string
      projectPath:
        description: "Project path for build (required for .NET or multi-project builds)"
        required: false
        type: string
      buildCommand:
        description: "Optional build command, if the language requires a build"
        required: false
        type: string
      run-codeql-gate-check:
        description: "Run CodeQL alert check? (yes/no)"
        type: string
        required: false
        default: "yes"

jobs:
  codeql-scan:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      # 1️⃣ Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Initialize CodeQL for the specified language
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ inputs.language }}

      # 3️⃣ Restore dependencies for .NET only
      - name: Restore .NET dependencies
        if: ${{ inputs.language == 'csharp' && inputs.projectPath != '' }}
        run: dotnet restore ${{ inputs.projectPath }}

      # 4️⃣ Build project if build command is provided
      - name: Build project (if needed)
        if: ${{ inputs.buildCommand != '' }}
        run: ${{ inputs.buildCommand }}

      # 5️⃣ Run CodeQL analysis
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

       # 6️⃣  Upload publish artifacts (only for C#)
      - name: Upload publish artifacts
        if: ${{ inputs.language == 'csharp' }}
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-publish
          path: publishoutput/
      
      #  CodeQl Gate
      - name: Check CodeQL Alerts
        run: |
          echo "🔎 Checking CodeQL alerts for branch ${GITHUB_REF}..."

          curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${GITHUB_REPOSITORY}/code-scanning/alerts?ref=${GITHUB_REF}&state=open" \
            | jq > alerts.json
          
          CRITICAL=$(jq '[.[] | select(.rule.security_severity_level=="critical")] | length' alerts.json)
          HIGH=$(jq '[.[] | select(.rule.security_severity_level=="high")] | length' alerts.json)
          MEDIUM=$(jq '[.[] | select(.rule.security_severity_level=="medium")] | length' alerts.json)
          LOW=$(jq '[.[] | select(.rule.security_severity_level=="low")] | length' alerts.json)

          echo "🔎 CodeQL Findings Summary:"
          echo "  Critical: $CRITICAL"
          echo "  High:     $HIGH"
          echo "  Medium:   $MEDIUM"
          echo "  Low:      $LOW"

          {
            echo "## 🔎 CodeQL Findings Summary"
            echo "- Critical: **$CRITICAL**"
            echo "- High: **$HIGH**"
            echo "- Medium: $MEDIUM"
            echo "- Low: $LOW"
          } >> $GITHUB_STEP_SUMMARY
          
          INPUT_RUN_ALERT_CHECK=${{ inputs.run-codeql-gate-check }}
            if [[ "$INPUT_RUN_ALERT_CHECK" == "yes" ]] && { [[ "$CRITICAL" -gt 0 ]] || [[ "$HIGH" -gt 0 ]]; }; then
                echo "❌ Pipeline failed due to critical/high findings."
                exit 1
            elif [[ "$INPUT_RUN_ALERT_CHECK" == "no" ]]; then
                echo "⚠️ Gate check bypassed as per configuration (run-codeql-gate-check=no)." >> $GITHUB_STEP_SUMMARY
            else
                echo "✅ No critical/high findings. Continuing pipeline." >> $GITHUB_STEP_SUMMARY
            fi
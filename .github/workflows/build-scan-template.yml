name: "Reusable Build and CodeQL Scan"

on:
  workflow_call:
    inputs:
      project-path:
        required: true
        type: string
      dotnet-version:
        required: false
        type: string
        default: "8.0.x"
      languages:
        required: true
        type: string

permissions:
  security-events: write
  contents: read
  actions: read

jobs:
  codeql-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET (only if dotnet project)
        if: contains(inputs.languages, 'csharp')
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ inputs.dotnet-version }}
      
      - name: Install GitHub CLI Extensions
        run: |
          gh extension install github/gh-code-scanning

      # ✅ Initialize CodeQL with input variable
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ inputs.languages }}

      # ✅ Build inside CodeQL context
      - name: Build application
        if: contains(inputs.languages, 'csharp')
        run: dotnet build ${{ inputs.project-path }} -c Release

      - name: Publish application
        if: contains(inputs.languages, 'csharp')
        run: dotnet publish ${{ inputs.project-path }} -c Release -o output

      # ✅ Dynamic category
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ inputs.languages }}"

      - name: Check for high/medium findings
        run: |
          gh code-scanning alert list \
            --repo $GITHUB_REPOSITORY \
            --ref $GITHUB_SHA \
            --severity error,warning \
            --state open \
            --json rule,severity > alerts.json

          if [ $(jq '. | length' alerts.json) -gt 0 ]; then
            echo "❌ Found medium/high CodeQL findings. Failing pipeline."
            cat alerts.json
            exit 1
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifacts
        if: contains(inputs.languages, 'csharp')
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-build
          path: output/

name: "Reusable CodeQL Advanced"

on:
  workflow_call:
    inputs:
      languages:
        description: "Languages to scan (comma separated or matrix)"
        required: true
        type: string
      build-mode:
        description: "Build mode (none, autobuild, manual)"
        required: false
        type: string
        default: "none"
      dotnet-version:
        description: ".NET version (if using csharp)"
        required: false
        type: string
        default: "8.0.x"

permissions:
  security-events: write
  packages: read
  actions: read
  contents: read

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    strategy:
      fail-fast: false
      matrix:
        language: ${{ fromJSON(inputs.languages) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Setup runtime (only when needed)
      - name: Setup .NET
        if: matrix.language == 'csharp'
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ inputs.dotnet-version }}

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ inputs.build-mode }}

      # Handle manual build (if requested)
      # - if: inputs.build-mode == 'manual' && matrix.language == 'csharp'
      - name: Publish code
        run: |
          # echo "‚öôÔ∏è Running manual build & publish for C#"
          dotnet publish **/*.csproj -c Release -o output

      # Run CodeQL Analysis
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ matrix.language }}"

      - name: Check CodeQL Alerts
        run: |
          echo "üîé Checking CodeQL alerts for branch ${{ github.ref_name }}..."

          # Fetch ALL severities
          curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${GITHUB_REPOSITORY}/code-scanning/alerts?ref=${{ github.ref_name }}&state=open" \
            | jq > alerts.json

          CRITICAL=$(jq '[.[] | select(.rule.severity=="critical")] | length' alerts.json)
          HIGH=$(jq '[.[] | select(.rule.severity=="high")] | length' alerts.json)
          MEDIUM=$(jq '[.[] | select(.rule.severity=="medium")] | length' alerts.json)
          LOW=$(jq '[.[] | select(.rule.severity=="low")] | length' alerts.json)

          echo "üîé CodeQL Findings Summary:"
          echo "  Critical: $CRITICAL"
          echo "  High:     $HIGH"
          echo "  Medium:   $MEDIUM"
          echo "  Low:      $LOW"

          {
            echo "## üîé CodeQL Findings Summary"
            echo "- Critical: **$CRITICAL**"
            echo "- High: **$HIGH**"
            echo "- Medium: $MEDIUM"
            echo "- Low: $LOW"
          } >> $GITHUB_STEP_SUMMARY

          if [ "$CRITICAL" -gt 0 ] || [ "$HIGH" -gt 0 ]; then
            echo "‚ùå Pipeline failed due to critical/high findings."
            exit 1
          else
            echo "‚úÖ No critical/high findings. Continuing pipeline."
          fi
      
      # Upload artifacts (only for csharp builds that produced output/)
      - name: Upload build artifacts
        if: matrix.language == 'csharp'
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-build
          path: output/
